


function Generator(container) {
        var isarray = (container instanceof Array);
        var isstring = (typeof(container) == 'string');
        if (container.__iter__) {
                this.values = [];
                this.iterator = container.__iter__();
        } else if (isarray || isstring) {
                this.values = container;
        } else {
                this.values = [];
                for(key in container) {
                        this.values.push(key);
                }
        }
        this.index = 0;
}

Generator.prototype.nextValue = function() {
        if (this.iterator) {
                try {
                        return this.iterator.next();
                } catch( e ) {
                        this.iterator_exhausted = true;
                        return null;
                }
        }
        else if (this.index < this.values.length) {
                return this.values[this.index++];
        } else {
                this.index++;
                return null;
        }
}

Generator.prototype.hadMore = function() {
        if (this.iterator_exhausted) {
                return false;
        }
        return (this.index-1) < this.values.length;
}




// generated by py2js from tests/basic/generator.py


var __name__ = '__main__';



function generator(min,max)  {
    
    if (arguments.length==1 && arguments[0] == undefined) { return; }
    
    var self = new generator(undefined);
    
    self.__iter__ = function() { return generator.__iter__(this); }
    
    self.iterator=generator.iterator;
    
    generator.__init__(self,min,max);
    
    return self;
}

generator.__init__ = function(self,min,max)  {
    self.min=min;
    self.max=max;
}
generator.__iter__ = function(self)  {
    return self.iterator(self);
}
generator.super = function(self) {
    this.self = self;
    return this;
}



generator.iterator = function(parent)  {
    
    if (arguments.length==1 && arguments[0] == undefined) { return; }
    
    var self = new generator.iterator(undefined);
    
    self.next = function() { return generator.iterator.next(this); }
    
    generator.iterator.__init__(self,parent);
    
    return self;
}

generator.iterator.__init__ = function(self,parent)  {
    self.parent=parent;
    self.value=parent.min;
}
generator.iterator.next = function(self)  {
    var val;
    val=self.value;
    if (val > self.parent.max) {
        throw StopIteration;
    }
    self.value += 1;
    return val;
}
generator.iterator.super = function(self) {
    this.self = self;
    return this;
}


g=generator(5,10);


container_py2js_1=g;
var generator_py2js_2 = new Generator(container_py2js_1);
for(v=generator_py2js_2.nextValue();generator_py2js_2.hadMore();v=generator_py2js_2.nextValue()) {
    console.log(String(v));
}
